#!/usr/bin/python3

from subprocess import Popen, PIPE, STDOUT
import sys


def system(cmd, stdin=None, stderr=False):
    # merge stdout and stderr, and return error code instead
    if stdin is not None:
        stdin = stdin.encode()
    process = Popen(cmd, shell=True,
                    stdout=PIPE,
                    stderr=PIPE if stderr else STDOUT)
    out, err = process.communicate(stdin)
    returncode = process.returncode
    if stderr:
        return out.decode(), err.decode(), returncode
    else:
        return out.decode(), returncode


# TODO the partition table (sfdisk -d or sgdisk --backup=) is already written in ../part_table0 and ../part_table1, but should not be needed


# the partitions can be scanned with blkid {src}

src, dst = sys.argv[1:]


# scan the partition with blkid
# TODO: lire le r√©sultat de sfdisk -d aussi ? pour les flags
out, err = system(f"/usr/sbin/blkid {src}")
assert err == 0
args = out.split(": ")[1].split(" ")
args = [field.split("=") for field in args]
fields = {}
for key, value in args:
    fields[key] = value[1:-1]

uuid = fields["UUID"]

out, err = system(f"mkfs.ext4 -U {uuid} {dst}")
assert err == 0
print(f"created ext4 filesystem on {dst}")

print(f"copying files from {src} to {dst}. this may take a long time")

_, err = system(f"mount {src} mnt/src")
assert err == 0
_, err = system(f"mount {dst} mnt/dst")
assert err == 0

out, err = system(f"cp -a mnt/src/* mnt/dst")
assert err == 0
out, err = system("umount mnt/src mnt/dst")
assert err == 0

print(f"cloned contents of {src} to {dst}")
